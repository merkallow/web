@using System.Text.RegularExpressions
<div style="margin-top: 1rem; margin-bottom: 1rem;">
    @*<button class="btn btn-primary" @onclick="@((e) => UploadCSV())"><span class="oi oi-plus" style="margin-right:.5rem; font-size: 14px;"></span>Upload CSV</button>*@
    <h4>Upload CSV</h4>
    <InputFile OnChange="@UploadCSV" class="btn btn-primary">Upload CSV </InputFile>

</div>
@code {
    async Task UploadCSV(InputFileChangeEventArgs e)
    {
        Console.WriteLine("csv comes");

        var singleFile = e.File;

        Regex regex = new Regex(".+\\.csv", RegexOptions.Compiled);
        if (!regex.IsMatch(singleFile.Name))
        {
            //show error invalidad format file
        }
        else
        {
            var stream = singleFile.OpenReadStream();
            var csv = new List<string[]>();
            MemoryStream ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            stream.Close();
            var outputFileString = System.Text.Encoding.UTF8.GetString(ms.ToArray());
            Console.WriteLine(outputFileString);

            foreach (var item in outputFileString.Split(new char[]{',', ';'}))
            {
                csv.Add(SplitCSV(item.ToString()));
            }
            

        }
    }

    private string[] SplitCSV(string input)
    {
        //Excludes commas within quotes
        Regex csvSplit = new Regex("(?:^|,)(\"(?:[^\"]+|\"\")*\"|[^,]*)", RegexOptions.Compiled);
        List<string> list = new List<string>();
        string curr = null;
        foreach (Match match in csvSplit.Matches(input))
        {
            curr = match.Value;
            if (0 == curr.Length) list.Add("");

            list.Add(curr.TrimStart(','));
        }

        return list.ToArray();
    }
}
